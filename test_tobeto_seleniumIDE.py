# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities 
from selenium.webdriver.support import expected_conditions as ec #hangi şarta baglı olarak bekeleyecegini
from pathlib import Path
from datetime import date
import openpyxl
from selenium.webdriver.common.action_chains import ActionChains 
# from constants.globalConstants import *

class TestSaucedemocom():
  def setup_method(self):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()
    self.driver.get("https://www.saucedemo.com/")
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_validLoginSeleniumide(self):
    self.driver.find_element(By.ID, "user-name").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.ID, "login-button").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".app_logo").text == "Swag Labs"
  
  
  def test_existUsernamePasswordLoginSeleniumIDE(self):
    self.driver.find_element(By.ID, "user-name").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("locked_out_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.ID, "password").send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    assert self.driver.find_element(By.XPATH, "//div[@id=\'login_button_container\']/div/form/div[3]/h3").text == "Epic sadface: Sorry, this user has been locked out."
    
  def test_emptyUsernamePasswordLoginSeleniumIDE(self):
    self.driver.find_element(By.ID, "login-button").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"error\"]").text == "Epic sadface: Username is required"
    
  
  def test_emptyPasswordLoginSeleniumIDE(self):
    self.driver.find_element(By.ID, "user-name").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.ID, "login-button").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"error\"]").text == "Epic sadface: Password is required"
  
 